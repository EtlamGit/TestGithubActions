name: C++ Qt CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-5.9, macos-5.12, windows-5.9, windows-5.12]
        include:
          - name: ubuntu-16.04
            os: ubuntu-16.04
            qt: '5.5'
          - name: ubuntu-18.04
            os: ubuntu-18.04
            qt: '5.9.5'
          - name: ubuntu-20.04
            os: ubuntu-20.04
            qt: '5.12.8'
          - name: macos-5.9
            os: macos-latest
            qt: '5.9.9'
          - name: macos-5.12
            os: macos-latest
            qt: '5.12.8'
          - name: windows-5.9
            os: windows-latest
            qt: '5.9.9'
            vcvars: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          - name: windows-5.12
            os: windows-latest
            qt: '5.12.8'
            vcvars: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"

    steps:
    - uses: actions/checkout@v2

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v2
      with:
        path: ${{ runner.workspace }}/Qt
        key: ${{ runner.os }}-QtCache-${{ matrix.qt }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ matrix.qt }}
        target: 'desktop'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Create BUILD folder
      run: |
        mkdir ../build
    
    - name: Environment (Ubuntu-16.04)
      if: matrix.os == 'ubuntu-16.04'
      run: echo '::set-env name=LD_LIBRARY_PATH::${{ runner.workspace }}/Qt/5.5/gcc_64/lib'

    - name: Environment (Windows)
      if: matrix.os == 'windows-latest'
      run: call ${{ matrix.vcvars }}
  
    - name: qmake
      working-directory: ../build
      run: qmake ${{ github.workspace }}/EasyGrblSetup.pro
    
    - name: make
      working-directory: ../build
      run: |
        make
        ls -Rhals
   
    - name: Archive build result
      uses: actions/upload-artifact@v2
      with:
        name: Binary ${{ matrix.name }}
        path: ${{ runner.workspace }}/build/EasyGrblSetup
